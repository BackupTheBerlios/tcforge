*** How to compile ***

Transcode compiles even if you have not all additional libs installed.
You do not *need* to have a "yes" on every configure check. Transcode comes
with some of the libraries included. That is libmpeg2 for decoding
MPEG-2 files, libdvdread for reading DVDs, a library to read AVI files.

You will need to have libavcodec (also known as ffmpeg libraries)
installed somewhere on your computer. Without libavcodec transcode
doesn't compile. The best way to accomplish this is to get ffmpeg
from cvs (www.ffmpeg.org), configure it with at least --enable-shared,
compile and install it. A package of some kind that includes libavcodec.so
and the headers will do as well. If you choose to install the files
on a non-default location (default prefix: /usr), then you will need
to tell transcode where they live. Very important: you _need_ both
the header files _and_ libavcodec.so files. The libavcodec.a file
won't do!

Its recommended, that you have a recent nasm installed (>=0.98.35) if
you are on an x86 based platform. A recent version of lame is a good
thing to have installed, too. Depending on what you want to do with
transcode you may need additional packages installed.

./configure --help 
./configure
make all
make install

If your libraries/packages are not installed in standard places,
use the respective --with-$$$-includes and --with-$$$-libs options,
where $$$ is the package name.

*** Configure options for transcode ***

For the options described below, the default value is in parenthesis
after the option.

Configure will not test for a package unless support is enabled.
For example, configure will not look for SDL unless the option
'--enable-sdl' is used.  If a package distributes pkg-config
information, or if a package distributes it's own -config script
(like libquicktime's lqt-config), configure will use information
from pkg-config or the package's script to find the package's
includes and libraries.  Otherwise, configure will look for each
package's includes in /usr/include and each package's libraries
in /usr/lib.  The options dealing with file locations, such as
'--with-a52-libs' can optionally be use to tell configure to look
in other locations for includes and libraries.  If configure is
unable to find support for a mandatory or optionally enabled
package, configure will terminate with an error and display a
message about the error.

General options:
--enable-statbuffer (enabled)
    enable internal static framebuffer support
--enable-netstream (disabled)
    enable network streaming support
--enable-xio (disabled)
    link to the xio library
--enable-warnings-as-errors (disabled)
    treat warnings as errors
--with-x (with)
    use the X Window System
--with-default-xvid=<default xvid> (xvid4)
    Default xvid version.  Valid options: xvid2, xvid3, xvid4
--with-mod-path (${prefix}/lib/transcode)
    directory where export/import modules are installed

Mandatory packages:
libz
libm
FFmpeg (libavcodec) >= 0.9.1pre1
  related options:
    --with-ffmpeg-libs-includes=PFX ()
        prefix where ffmpeg libs includes are installed
    --with-ffmpeg-libs-libs=PFX ()
        prefix where ffmpeg libs libraries files are installed
    --enable-ffmpeg-libs-static (disabled)
        link binaries and modules statically to ffmpeg-libs
        WARNING: creates huge binaries
        WARNING: only tested on linux x86

OS dependent packages:
v4l
  related options:
    --enable-v4l (disabled)
        if enabled, builds v4l and v4l2 modules, which imports video
        from video capture hardware on Linux using the Video4Linux(2)
        API.
		please note: use import_v4l2 if possible; v4l is depricated.
  affected modues: import_v4l.so import_v4l2.so

Optional packages:
FreeType2
  related options:
    --enable-freetype2 (enabled)
        if enabled, add FreeType2 support, which is used to render
        text
    --with-ft-prefix=PFX ()
        Prefix where FreeType is installed
    --with-ft-exec-prefix=PFX ()
        Exec prefix where FreeType is installed
    --disable-freetypetest (enabled)
        Do not try to compile and run a test FreeType program
  affected modules: filter_text.so, filter_subtitler.so

liba52
  related options:
    --enable-a52 (enabled)
        if enabled, builds liba52 audio decoder module
    --with-a52-includes=PFX ()
        prefix where local liba52 includes are installed
    --with-a52-libs=PFX ()
        prefix where local liba52 libs are installed
    --enable-a52-default-decoder (disabled)
        if enabled, and --enable-a52 is also enabled, uses liba52 as
        default audio decoder, otherwise, libac3 is used as the
        default audio decoder
  affected modules: a52_decore.so

mjpegtools
  related options:
    --enable-mjpeg (disabled)
        if enabled, builds mjpegtools dependent plugins
  affected modules: export_yuv4mpeg.so, export_mpeg2enc.so,
    export_mp2enc.so

SDL
  related options:
    --enable-sdl (disabled)
        if enabled, adds support for graphical display via SDL
    --with-sdl-prefix=PFX ()
        Prefix where SDL is installed
    --with-sdl-exec-prefix=PFX ()
        Exec prefix where SDL is installed
    --disable-sdltest (enabled)
        Do not try to compile and run a test SDL program
  affected modules: filter_preview.so

libfame
  related options:
    --enable-libfame (disabled)
        if enabled, build libfame dependent module
    --with-libfame-prefix=PFX ()
        Prefix where libfame is installed
    --with-libfame-exec-prefix=PFX ()
        Exec prefix where libfame is installed
    --disable-libfametest (enabled)
        Do not try to compile and run a test libfame program
  affected modules: export_fame.so

lame
  related options:
    --enable-lame (enabled)
        if enabled, transcode will use the system lame, instead of
        building and using an older version of libmp3lame distributed
        with transcode
    --with-lame-includes=PFX ()
        prefix where local lame includes are installed
    --with-lame-libs=PFX ()
        prefix where local lame libs are installed
  affected modules: export_af6.so, export_dv.so, export_raw.so,
    export_divx4.so, export_divx4raw.so, export_divx5.so,
    export_divx5raw.so, export_debugppm.so, export_ppm.so,
    export_ffmpeg.so, export_lame.so, export_pvn.so,
    export_yuv4mpeg.so, export_mpeg2enc.so, export_mp2enc.so,
    export_mjpeg.so, export_xvid2.so, export_xvid3.so,
    export_xvid4.so, import_mp3.so

avifile
  related options:
    --enable-avifile (disabled)
        build avifile dependent modules
  affected modules: export_af6.so, af6_decore.so

ogg
  related options:
    --enable-ogg (enabled)
        if enabled, adds support for importing OGG audio
  affect modules:

vorbis
  related options:
    --enable-vorbis (enabled)
        if enabled, adds support for importing Vorbis audio
    affected modules:

theora
  related options:
    --enable-theora (disabled)
        if enabled, adds support for importing theora audio
    --with-theora-includes=PFX ()
        prefix where local theora includes are installed
    --with-theora-libs=PFX ()
        prefix where local theora libs are installed
    affected modules:

libdvdread
  related options:
    --enable-dvdread (enabled)
        if enabled, adds support for reading DVDs
    --with-dvdread-includes=PFX ()
        prefix where local dvdread includes are installed
    --with-dvdread-libs=PFX ()
        prefix where local dvdread lib is installed
  affected modules: import_dvd.so

libmpeg3
  related options:
    --enable-libmpeg3 (disabled)
        if enabled, builds libmpeg3 dependent module
    --with-libmpeg3-includes=PFX ()
        prefix where local libmpeg3 includes are installed
    --with-libmpeg3-libs=PFX ()
        prefix where local libmpeg3 libs are installed
  affected modules: import_mpeg3.so

liblve
  related options:
    --enable-liblve (disabled)
        if enabled, build liblve dependent module
    --with-liblve-builddir=PFX ()
        path to lve builddir
  affected modules: import_lve.so

PVM3
  related options:
    --enable-pvm3 (disabled)
        if enabled, build and use pvm3 code
    --with-pvm3-lib=PFX ()
        prefix where local pvm3 libraries are installed
    --with-pvm3-include=PFX ()
        prefix where local pvm3 includes are installed
  affected modules: export_pvm.so

libdv
  related options:
    --enable-dv (disabled)
        if enabled, build libdv dependent modules
    --with-dv-includes=PFX ()
        prefix where local libdv includes are installed
    --with-dv-libs=PFX ()
        prefix where local libdv libs are installed
  affected modules: export_dvraw.so, export_dv.so

libquicktime
  related options:
    --enable-libquicktime (disabled)
        if enabled, build libquicktime dependent modules
    --with-libquicktime-includes=PFX ()
        prefix where local libquicktime includes are installed
    --with-libquicktime-libs=PFX ()
        prefix where local libquicktime libs are installed
  affected modules: export_mov.so, import_mov.so

lzo
  related options:
    --enable-lzo (disabled)
        if enabled, build liblzo dependent modules
    --with-lzo-includes=PFX ()
        prefix where local liblzo includes are installed
    --with-lzo-libs=PFX ()
        prefix where local liblzo libs are installed
  affected modules: export_lzo.so, import_lzo.so

libxml2
  related options:
    --enable-libxml2 (disabled)
        if enabled, add libxml2 support
  affected modules: import_xml.so

gtk
  related options:
    --enable-gtk (disabled)
        if enabled, adds support for graphical display via gtk
  affected modules: filter_preview.so

ImageMagick
  related options:
    --enable-magick (disabled)
        if enabled, build ImageMagick dependent modules
  affected modules: export_im.so, import_im.so, import_imlist.so,
    filter_logo.so, filter_logoaway.so, filter_compare.so

libjpeg
  related options:
    --enable-libjpeg (enabled)
        if enabled, build libjpeg dependent modules
  affected modules: export_mjpeg.so, export_jpg.so

FFMpeg (executable)
  related options:
    --enable-ffbin (disabled)
        if enabled, build FFmpeg binary module
  affected modules: import_ffbin.so

lors/ibp
  related options:
    --enable-ibp (disabled)
        if enabled, build ibp support
    --with-libfdr=DIR ()
        base directory for libfdr
    --with-libibp=DIR ()
        base directory for libibp
    --with-libexnode=DIR ()
        base directory for libexnode
    --with-liblbone=DIR ()
        base directory for liblbone
    --with-libend2end=DIR ()
        base directory for libend2end
    --with-liblors=DIR ()
        base directory for liblors
  affected modules:
