----
Q:	I am using version 0.6.x where x < 11, and I'm having
	trouble with A/V synchronicity
A:	Upgrade to 0.6.12 (or newer or cvs). (ems)
---
Q:	How do I make a copy of a DVD-9
A:	For german reading users here is a link http://linuxwiki.de/DvdAuthoring (felix)
---
Q:	How do I obtain transcode from CVS
A:	There are instructions available at
	http://transcoding.org/#cvs (tibit)
---
Q:	Talking of ffmpeg, I seem to be suffering for having an
	almost infinite number of copies of it. For example, it
	comes bundled with transcode, mplayer and avifile. None
	of these seem to be even closely the same file! Am I
	missing something?
A:	As the api of libavcodec is sometimes changing, the
	developers thought it would a bad idea to use shared
	libraries. Most programs using the library copied
	this thought and link statically to a version of
	libavcodec they supply themselves (like transcode and
	mplayer). This will guarantee that the program sees the
	api version it expects. When you compile libavcodec
	seperately, you actually can build shared libraries,
	but I have not seen a single program using them, so
	you probably can throw them away. There is even a
	large chance that you can delete the static library
	files. (ems)
---
Q:	Finally, there's the questions about the justly infamous
	ffmpeg.cfg file. What are all the parameters and what do
	they mean?
A:	Ooops.... Nobody knows I am afraid. The good news is
	that most of them you don't need actually. The guru
	says that you should leave most of them alone. BTW
	I still have this wild plan to add pseudo-codecs to
	the ffmpeg export module like "dvd" and "svcd" that
	will set all necessary parameters. I think that's a
	prerequisite for a module actually usable by normal
	users. BTW2 have a look at the manual page of mplayer,
	it does spend a few words on the options. This list is
	also included as readme in the transcode package, but
	it might be outdated. (ems)
---
Q:	What's the difference between -j and -Y?
A:	This one I know. The difference between -j and -Y is only
	the order that transcode does the clipping. In the manual
	page we find

	The video frame operations ordering is fixed:
	"-j -I -X -B -Z -Y -r -z -l -k -K -G -C"
	(executed from left to right).

	So if one needs to do frame clipping and resizing, in a
	specific order, he can choose the apropriate transcode
	options.

	For instance, if one wants to clip and then resize the
	video frame, in this order, he can use -j (clip) and
	-B (resize). In this case -Y and -B would not work, as
	the operation -Y is done after -B.

	There are still two other options for clipping:
	--pre_clip (executed before -j) and
	--post_clip (executed after -Y). (ems)
---
Q:	How do I transcode an avi to mpeg?
PA:	(Partial answer) In this form, your question cannot
	easily be answered. You're talking of _container_
	formats (avi, mpeg) while you probably mean _codec_
	formats.
	<br />
	A _container_ is a file format designed to hold both
	audio and video (and sometimes more) data in a way that
	a player application can play them back	properly (that
	means, with audio and video synchronised).
	<br />
	Examples of container formats are avi, mpeg-ps, mpeg-ts,
	asf, quicktime, mp4.
	<br />
	The _codec_ on the other hand, determines what's inside
	the _container_, it is the (compressed) video or audio
	data itself.
	<br />
	Examples of video codecs are: mpeg1, mpeg2,	mpeg4 (aka
	"divx", "xvid"), realvideo, wmv, dv.
	<br />
	Examples of audio codecs are: mpeg1-layer2 (aka "mp2"),
	mpeg1-layer3 (aka "mp3"), wma, aac, pcm.
	<br />
	BTW in avi container files, there's mostly mpeg4 video
	content and mp3 audio content (although this is
	absolutely not obligatory, use tcprobe to find out).
	If you want to burn material on a SVCD or DVD, you need
	to have the video in mpeg2, the audio in mp2 (or ac3 in
	case of DVD) and both of these in a mpeg-ps (program
	stream aka "vob") container.

	With this information you should be able to refrase 
	your question a get a proper answer ;-) (ems)
---
Q:	How do I use a CVS version of ffmpeg with transcode?
A:	There are two ways: Quick&Dirty (but tested by me) and the more
	official way. For this to work you also need transcode from CVS!

	Q&D works like this:
	<ul>
	<li>make a new directory for ffmpeg, not in the transcode directory
	(suggestion: ../ffmpeg)</li>
	<li>get the latest cvs version of ffmpeg and unpack it there</li>
	<li>configure and compile it</li>
	<li>go to the transcode source directory</li>
	<li>remove everything under ffmpeg</li>
	<li>make a new directory ffmpeg/libavcodec with a couple of links into
	your ffmpeg-cvs directory something like this:
	<pre>
        avcodec.h -> ../../../ffmpeg/ffmpeg/libavcodec/avcodec.h
        common.h -> ../../../ffmpeg/ffmpeg/libavcodec/common.h
        libtcavcodec.a -> ../../../ffmpeg/ffmpeg/libavcodec/libavcodec.a
        rational.h -> ../../../ffmpeg/ffmpeg/libavcodec/rational.h
	</pre> </li>
	<li> create the subdirs i386 and ppc in ffmpeg/libavcodec </li>
	<li> create Makefile.in with empty rules for the targets "all" and
	"install" in directories ffmpeg/libavcodec, ffmpeg/libavcodec/i386 and
	ffmpeg/libavcodec/ppc (or configure will fail):
	<pre>
	    $ echo -e "all:\ninstall:" > ffmpeg/libavcodec/Makefile.in
	    $ echo -e "all:\ninstall:" > ffmpeg/libavcodec/i386/Makefile.in
	    $ echo -e "all:\ninstall:" > ffmpeg/libavcodec/ppc/Makefile.in
	</pre>
	</li>
	<li>now you can go to the top of the transcode source directory and type
	configure && make.</li>
	</ul></p><p>
	The other way is replace all the files in the ffmpeg directory with the
	respective files from ffmpeg cvs (which may be some work ;-)) (ems)
---
Q:	Peoples' faces are purple!
A1:	This probably means that the u and v planes (Cr/Cb) are
	being swapped. As there is no clean definition whether u
	should be Cr or Cb (and vv), this easily happens. (ems)
A2:	I solved this problem with the -k option to transcode.
	People are no longer purple.  Hence, if you're transcoding
	from YUY2 to YV12 and you get purple people, you need
	to use the -k option. (ems)
---
Q:	People are upside-down!
A:      Use -z. Usually it goes away when you turn on YUV mode with -V. (tibit)
---
Q:	I have installed latest transcode tool from source and
	then from rpm. Whenever I run program it falls over as
	it cannot find export_mp2enc.so.
A:	RPM packages of some distributions are not complete. This is a
	general problem. If you want to use the mpeg2enc export module, you
	will have to compile transcode yourself, or try to find a complete rpm
	on the net. (ems)
---
Q:	Do I need the avifile library to write AVI files?
A:	No. Transcode has its own library for writing AVI files. The avifile
	library is used to enable support for win32 binary codecs. The libavcodec
	from the ffmpeg project has a free implementation for most of these codecs
	anyway. (tibit)
---
Q:	Help! I got lots of "no"s after running ./configure!
A:	This is not necessarily a bad thing. transcode has configure checks
	for some very "obscure" import and export codecs which you probably
	never use anyway. <br />
	If you are sure you have a specific library installed and transcode still
	does not find it, have a look at config.log to find out the reason. (tibit)
---
Q:	When trying to read a DVD I get something like
	<tt> (dvd_reader.c) no support for DVD reading configured - exit. </tt>
	What am I missing, ie what do I need to do to fix it?
A:	You have probably installed transcode from source and you are missing
	the dvdread library. This library (including the -devel packages) must be
	installed at compile time and transcode must find it. If transcode
	found it, it will print <tt>"DVD navigation support with libdvdread
	yes"</tt> at the end of the configure run. (tibit)
---
Q:	I am missing the mp3 import module (import_mp3.so)!
A:	You need to have a recent lame library installed. Including all header
	files (-devel package) (tibit)
---
Q:	How do I calculate the best tcrequant number from within a script
	when going from a DVD9 to a DVD5?
A:	Once you have separated (using tcextract) the audio and the video,
	get the file sizes of the audio and video files.  If you are burning to
	a DVD5, the maximum image size is 4700000000.  So the following
	equation will give you a 'best fit' number.  1.04 is a fudge factor to
	leave space for the file system and other overhead.
	<br />
	If you are including more that one audio stream or a subtitle stream,
	those filesizes must also be subtracted from the maximum dvd image size.

	<pre>
	requant_factor = (video_size / (dvdmax_size - audio_size)) * 1.04;
	tcrequant -i ofile.m2v -o movie.m2v -f requant_factor
	</pre> (jcooper)
---
